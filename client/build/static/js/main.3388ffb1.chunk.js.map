{"version":3,"sources":["Pages/History.js","Navs/NavbarTop.js","Pages/Home.js","Pages/UsersTable.js","Pages/Error.js","Pages/Users.js","Pages/UsersTable2.js","Pages/Users2.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","forceRefresh","url","Navbarfunc","_useState","useState","_useState2","Object","slicedToArray","show","setShow","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ButtonToolbar","Button","onClick","Modal","onHide","animation","size","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Group","controlId","Control","type","placeholder","value","onChange","e","target","Footer","console","log","axios","method","data","then","res","status","email","localStorage","setItem","history","push","window","location","reload","catch","err","clear","NavbarTop","React","Component","GetUsername","style","position","left","top","transform","getItem","Home","UsersTable","_React$useState","_React$useState2","users","setUsers","_React$useState3","activeModal","_React$useState4","handleClose","_React$useState5","show0","activeModal0","_React$useState6","setShow0","handleClose0","useEffect","fetch","results","json","_React$useState7","showdelete","activedelete","_React$useState8","SetShowdelete","handleClosedelete","_React$useState9","_id","first_name","country_name","city_name","state_name","_React$useState10","modifyuser","setModifyuser","updateValue","objectSpread2","defineProperty","name","_React$useState11","_React$useState12","showcreate","setShowcreate","handleShowcreate","handleClosecreate","_React$useState13","_React$useState14","newuser","setNewuser","createRecord","preventDefault","alert","updateField","ButtonGroup","aria-label","onSubmit","as","Row","Label","column","sm","Col","form","Table","responsive","map","user","key","index","readOnly","company_address","userid","document","getElementById","elements","modifyRecord","query","Id","Error","CheckLogin","Error_Error","Users","Container","fluid","Search","SearchBar","lib_default","bootstrap4","stripped","keyField","columns","dataField","text","sort","defaultSorted","order","cellEdit","cellEditFactory","mode","blurToSave","UsersTable2_UsersTable","Users2_CheckLogin","App","NavbarTop_NavbarTop","react_router","exact","path","component","Users2","Boolean","hostname","match","ReactDOM","render","react_router_dom","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3388ffb1.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n    forceRefresh: true\n});","import React, { useState } from 'react';\nimport { Navbar, Nav, Button, ButtonToolbar, Modal, Form } from 'react-bootstrap';\nimport history from '../Pages/History';\nimport axios from 'axios'; // axios is a http request module\n\nlet url = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api/users' : \"https://windows-pwa-express.azurewebsites.net/api/users\"\n\nfunction Navbarfunc() {\n\tconst [show, setShow] = useState(false); // React 16.8.0 is using state hook to replace the component mount life circle\n\n\tconst handleShow = () => setShow(true); // This is for poping up the login page\n\tconst handleClose = () => setShow(false);\n\n\tconst [username, setUsername] = useState(''); // set default value to empty and fetch data from input box\n\tconst [password, setPassword] = useState('');\n\n\tconst handleSingin = () => {\n\t\tsetShow(false);\n\t\tconsole.log(username);\n\t\tconsole.log(password);\n\n\t\taxios({ \t\t\t\t// send POST request to Express API\n\t\t\tmethod: 'post',\n\t\t\turl: url + '/login',\n\t\t\tdata: {\n\t\t\t\tusername: username,\n\t\t\t\tpassword: password\n \t\t\t }\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tif(res.status === 200){\n\t\t\t\t\tconsole.log(res.data.email); // login success\n\t\t\t\t\tlocalStorage.setItem('loginemail', res.data.email); // store the user email in browser storage\n\t\t\t\t\thistory.push('/#/home'); \t// route to home page \n\t\t\t\t\twindow.location.reload();\t// refresh teh page\n\t\t\t\t} else {\n\t\t\t\t\thistory.push('/#/home');\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\thistory.push('/#/error');\n\t\t\t\twindow.location.reload();\n\t\t\t})\n\t}\n\n\tconst handleSingout = () => {\n\t\t// console.log('handleSingout');\n\t\tlocalStorage.clear();\t// clear user email information when clicking signout\n\t\twindow.location.reload();\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n\t\t\t\t<Navbar.Brand href=\"#home\">Express React MongoDB</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<Nav.Link href=\"#home\">Home</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"#users\">Users</Nav.Link>\n\t\t\t\t\t\t{/* <Nav.Link href=\"#users2\">Users2</Nav.Link> */}\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t<Button variant=\"info\" onClick={handleShow}>Signin</Button>\n\t\t\t\t\t\t\t{/* pop out modal for user login */}\n\t\t\t\t\t\t\t<Modal show={show} onHide={handleClose} animation={true} size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t\t<Modal.Title>Modal heading</Modal.Title>\n\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicUsername\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)}/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t<Button type='button' variant=\"primary\" onClick={handleSingin}>\n\t\t\t\t\t\t\t\t\t\tGo\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t\t<ButtonToolbar>\n\t\t\t\t\t\t\t<Button variant=\"light\" onClick={handleSingout}>Signout</Button>\n\t\t\t\t\t\t</ButtonToolbar>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t</div>\n\t);\n}\n\nexport default class NavbarTop extends React.Component {\n\trender() {\n\t\treturn ( \n\t\t\t\t<Navbarfunc />\t// invoke the function as a component\n\t\t);\n\t}\n}\n\n\n","import React from 'react';\n\nfunction GetUsername() {\n    // const [username, setUsername] = useState('');\n\n    let style = {\n        position: 'absolute', left: '50%', top: '50%',\n        transform: 'translate(-50%, -50%)'\n    }\n\n    return (\n        <div style={style}>\n            <h3>Welcome {localStorage.getItem('loginemail')}</h3>\n        </div>\n    );\n}\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <GetUsername />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Table, Button, ButtonGroup, Modal, Form, Row, Col } from 'react-bootstrap';\nimport axios from 'axios'; // axios is a http request module\n\nexport default function UsersTable() {\n\tlet url = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api/users' : \"https://rhg-pwa-admin-interface.azurewebsites.net/api/users\"\n\n\tconst [users, setUsers] = React.useState([]);\n\t// modify button modal\n\tconst [show, setShow] = React.useState({\n\t\tshow: false,\n\t\tactiveModal: null\n\t});\n\tconst handleShow = (e, index) => setShow({\n\t\tshow: true,\n\t\tactiveModal: index,\n\t});\n\tconst handleClose = () => setShow({\n\t\tshow: false,\n\t\tactiveModal: null,\n\t});\n\n\tconst [show0, setShow0] = React.useState({\n\t\tshow0: false,\n\t\tactiveModal0: null\n\t});\n\tconst handleShow0 = (e, index) => setShow0({\n\t\tshow: true,\n\t\tactiveModal0: index,\n\t});\n\tconst handleClose0 = () => setShow0({\n\t\tshow: false,\n\t\tactiveModal0: null,\n\t});\n\n\t// use react hook to fetch all the user data from Express API\n\tReact.useEffect(() => {\n\t\tfetch(url)\n\t\t\t.then(results => results.json())\n\t\t\t.then(users => {\n\t\t\t\tsetUsers(users);\n\t\t\t\t// console.log(users);\n\t\t\t});\n\t}, [url]);\n\t// handle delete record.\n\tconst [showdelete, SetShowdelete] = React.useState({\n\t\tshowdelete: false,\n\t\tactivedelete: null\n\t});\n\tconst handleShowdelete = (e, index) => SetShowdelete({\n\t\tshowdelete: true,\n\t\tactivedelete: index\n\t});\n\tconst handleClosedelete = () => SetShowdelete({\n\t\tshowdelete: false,\n\t\tactivedelete: null\n\t});\n\t// send request to express delete api and delete the data due to Mongo index ID. findByIdAndRemove()\n\tfunction deleteRecord(e, id) {\n\t\tconsole.log(id);\n\t\tconsole.log(url + '/delete/' + id);\n\t\taxios({ \t\t\t\t// send POST request to the delete api\n\t\t\tmethod: 'post',\n\t\t\turl: url + '/delete/' + id,\n\t\t\tquery: {\n\t\t\t\tId: id,\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tconsole.log(\"delete success\"); // login success\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"delete failed\");\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\twindow.location.reload();\n\t\t\t})\n\t}\n\n\t// set from info\n\tconst [modifyuser, setModifyuser] = React.useState({\n\t\t_id:'',\n\t\temail: '',\n\t\tpassword: '',\n\t\tfirst_name: '',\n\t\tcountry_name: '',\n\t\tcity_name: '',\n\t\tstate_name: '',\n\t})\n\n\t// create form submit\n\tconst modifyRecord = (e, userid) => {\n\t\te.preventDefault();\n\t\tconsole.log(modifyuser);\n\n\t\tvar user = document.getElementById(userid).elements;\n\t\tconsole.log(user._id.value);\n\t\tconsole.log(user.email.value);\n\t\tconsole.log(user.email.placeholder);\n\t\tconsole.log(user.password.value);\n\t\tconsole.log(user.first_name.value);\n\t\tconsole.log(user.country_name.value);\n\t\tconsole.log(user.city_name.value);\n\t\tconsole.log(user.state_name.value);\n\t\tconsole.log(url + '/edit/' + user._id.value);\n\t\t\n\t\t// axios call to express create user\n\t\taxios({\n\t\t\tmethod: 'post',\n\t\t\turl: url + '/edit/' + user._id.value,\n\t\t\tdata: {\n\t\t\t\t_id: user._id.value,\n\t\t\t\temail: (modifyuser.email === \"\")? user.email.placeholder : modifyuser.email,\n\t\t\t\tpassword: (modifyuser.password === \"\")? user.password.placeholder : modifyuser.password,\n\t\t\t\tfirst_name: (modifyuser.first_name === \"\")? user.first_name.placeholder : modifyuser.first_name,\n\t\t\t\tcountry_name: (modifyuser.country_name === \"\")? user.country_name.placeholder : modifyuser.country_name,\n\t\t\t\tcity_name: (modifyuser.city_name === \"\")? user.city_name.placeholder : modifyuser.city_name,\n\t\t\t\tstate_name: (modifyuser.state_name === \"\")? user.state_name.placeholder : modifyuser.state_name,\n\t\t\t}\n\t\t})\n\t\t.then(res => {\n\t\t\tif (res.status === 200) {\n\t\t\t\tconsole.log(\"modify success\");\n\t\t\t\twindow.location.reload();\n\t\t\t} else {\n\t\t\t\tconsole.log(\"modify failed\");\n\t\t\t\t// history.push('/#/error');\n\t\t\t\twindow.location.reload();\n\t\t\t}\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err);\n\t\t\twindow.location.reload();\n\t\t})\n\t};\n\t// match form name properity with the input value\n\tconst updateValue = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetModifyuser({\n\t\t\t...modifyuser,\n\t\t\t[e.target.name]: e.target.value,\n\t\t});\n\t};\n\n\tconst renderTable = () => {\n\t\treturn users.map((user) => {\n\t\t\t// console.log(user);\n\t\t\treturn (\n\t\t\t\t<tr key={user._id}>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<p className=\"text-primary\" onClick={e => handleShow0(e, user._id)}>{user.first_name}</p>\n\t\t\t\t\t\t<Modal show={show0.activeModal0 === user._id} onHide={handleClose0} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\n\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t<Modal.Title>Details</Modal.Title>\n\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t<Form id={user._id}>\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextId\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">ID</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user._id} value={user._id} name=\"_id\" />\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextEmail\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Email</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.email} value={user.email} name=\"email\" />\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Password</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='password' placeholder={user.password} value={user.password} name=\"password\"/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextFirstName\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">First Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.first_name} value={user.first_name} name=\"first_name\"/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextCountry\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Country Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.country_name} value={user.country_name} name=\"country_name\"/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextCity\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">City Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.city_name} value={user.city_name} name=\"city_name\"/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextState\">\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">State Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.state_name} value={user.state_name} name=\"state_name\"/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t</Modal>\n\t\t\t\t\t</td>\n\t\t\t\t\t<td>{user.email}</td>\n\t\t\t\t\t<td>{user.password}</td>\n\t\t\t\t\t<td>{user.country_name}</td>\n\t\t\t\t\t<td>{user.city_name}</td>\n\t\t\t\t\t<td>{user.state_name}</td>\n\t\t\t\t\t<td>{user.company_address}</td>\n\t\t\t\t\t<td>\n\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\">\n\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"primary\" onClick={e => handleShow(e, user._id)}>Modify</Button>\n\t\t\t\t\t\t\t<Modal show={show.activeModal === user._id} onHide={handleClose} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t\t\t<Modal.Title>Modify</Modal.Title>\n\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t<Form id={user._id} onSubmit={e => modifyRecord(e, user._id)}>\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextId\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">ID</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user._id} value={user._id} name=\"_id\" />\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextEmail\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Email</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.email} value={modifyuser.email} name=\"email\" onChange={e => updateValue(e)}/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Password</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='password' placeholder={user.password} value={modifyuser.password} name=\"password\" onChange={e => updateValue(e)}/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextFirstName\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">First Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.first_name} value={modifyuser.first_name} name=\"first_name\" onChange={e => updateValue(e)}/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextCountry\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Country Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.country_name} value={modifyuser.country_name} name=\"country_name\" onChange={e => updateValue(e)}/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextCity\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">City Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.city_name} value={modifyuser.city_name} name=\"city_name\" onChange={e => updateValue(e)}/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextState\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">State Name</Form.Label>\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.state_name} value={modifyuser.state_name} name=\"state_name\" onChange={e => updateValue(e)}/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t<Button form={user._id} type='submit' variant=\"primary\" >Submit</Button>\n\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"danger\" onClick={e => handleShowdelete(e, user._id)}>Delete</Button>\n\t\t\t\t\t\t\t<Modal show={showdelete.activedelete === user._id} onHide={handleClosedelete} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\n\t\t\t\t\t\t\t\t<Modal.Header variant=\"danger\" closeButton bg=\"danger\">\n\t\t\t\t\t\t\t\t\t<Modal.Title>Delete</Modal.Title>\n\t\t\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t\t\t<p>user email is: {user.email}</p>\n\t\t\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t\t\t<Button type='button' variant=\"danger\" onClick={e => deleteRecord(e, user._id)}>Delete</Button>\n\t\t\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t})\n\t}\n\n\n\t// create record\n\tconst [showcreate, setShowcreate] = React.useState(false);\n\n\tconst handleShowcreate = () => {\n\t\tsetShowcreate(true);\n\t}\n\tconst handleClosecreate = () => {\n\t\tsetShowcreate(false);\n\t}\n\t// set from info\n\tconst [newuser, setNewuser] = React.useState({\n\t\t_id:'',\n\t\temail: '',\n\t\tpassword: '',\n\t\tfirst_name: '',\n\t\tcountry_name: '',\n\t\tcity_name: '',\n\t\tstate_name: '',\n\t})\n\t// create form submit\n\tconst createRecord = e => {\n\t\te.preventDefault();\n\t\tconsole.log(newuser);\n\t\t// axios call to express create user\n\t\taxios({\n\t\t\tmethod: 'POST',\n\t\t\turl: \"https://js-function-jery.azurewebsites.net/api/HttpTrigger-PWAfunction-Create?code=sVx6jdiHXHUIa3nyqDEJOX9nJ0maawVfb6KipAg3ECZ6zlkKfeuy4A==\",\n\t\t\tdata: {\n\t\t\t\temail: newuser.email,\n\t\t\t\tpassword: newuser.password,\n\t\t\t\tfirst_name: newuser.first_name,\n\t\t\t\tcountry_name: newuser.country_name,\n\t\t\t\tcity_name: newuser.city_name,\n\t\t\t\tstate_name: newuser.state_name,\n\t\t\t}\n\t\t})\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tif (res.status === 200) {\n\t\t\t\t\tconsole.log(\"create success\");\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} else if(res.status == 201 ){\n\t\t\t\t\tconsole.log(\"email exist, please use another email\");\n\t\t\t\t\twindow.alert(\"email exist, please use another email\");\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"create failed\");\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tconsole.log(err);\n\t\t\t})\n\t};\n\t// match form name properity with the input value\n\tconst updateField = e => {\n\t\tsetNewuser({\n\t\t\t...newuser,\n\t\t\t[e.target.name]: e.target.value\n\t\t});\n\t};\n\n\tconst createData = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<ButtonGroup aria-label=\"Basic example\">\n\t\t\t\t\t<Button size=\"lg\" variant=\"success\" onClick={handleShowcreate}>Create</Button>\n\t\t\t\t\t<Modal show={showcreate} onHide={handleClosecreate} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n\t\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t\t<Modal.Title>Create</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\t\t\t\t\t\t\t<Form id='createuser' onSubmit={createRecord}>\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextEmail\">\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Email</Form.Label>\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"sample@sample.com\" value={newuser.email} name=\"email\" onChange={updateField}/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Password</Form.Label>\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='password' placeholder=\"\" value={newuser.password} name=\"password\" onChange={updateField}/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">First Name</Form.Label>\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"\" value={newuser.first_name} name=\"first_name\" onChange={updateField}/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Country Name</Form.Label>\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"\" value={newuser.country_name} name=\"country_name\" onChange={updateField}/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">City Name</Form.Label>\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"\" value={newuser.city_name} name=\"city_name\" onChange={updateField}/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">State Name</Form.Label>\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"\" value={newuser.state_name} name=\"state_name\" onChange={updateField}/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button form='createuser' type='submit' variant=\"success\" >Submit</Button>\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Modal>\n\t\t\t\t</ButtonGroup>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t{createData()}\n\t\t\t<Table responsive >\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>First_name</th>\n\t\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t\t<th>Password</th>\n\t\t\t\t\t\t<th>Country_name</th>\n\t\t\t\t\t\t<th>city_name</th>\n\t\t\t\t\t\t<th>state_name</th>\n\t\t\t\t\t\t<th>company_address</th>\n\t\t\t\t\t\t<th>Operations</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{renderTable()}\n\t\t\t\t</tbody>\n\t\t\t</Table>\n\t\t</div>\n\t);\n}\n\n\n// https://medium.com/@BogdanSoare/how-to-use-reacts-new-context-api-to-easily-manage-modals-2ae45c7def81","import React from 'react';\n\nexport default class Error extends React.Component {\n    render() {\n        const style = {\n            position: 'absolute', left: '50%', top: '50%',\n            transform: 'translate(-50%, -50%)'\n        }\n        return (\n            <div style={style}>\n                <h3>Sorry, this site is for Admin only</h3>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport UsetsTable from './UsersTable';\nimport Error from './Error';\nimport { Container } from 'react-bootstrap';\n\nfunction CheckLogin() {\n    // check if use email is stored in browser, if so then user has logged in and redirect to home page\n    if(localStorage.getItem('loginemail')){ \n        return <UsetsTable />\n    } else {\n        return <Error />       // user not logged in, redirect to error page\n    }\n}\n\nclass Users extends Component{\n    render(){\n        return(\n            <Container fluid>\n                <CheckLogin />\n            </Container>\n        );\n    }\n}\n\nexport default Users;","import React from 'react';\nimport { Table, Button, ButtonGroup, Modal, Form, Row, Col } from 'react-bootstrap';\nimport axios from 'axios'; // axios is a http request module\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport './UserTable2.css'\n\nexport default function UsersTable() {\n    let url = process.env.NODE_ENV === 'development' ? 'https://js-function-jery.azurewebsites.net/api/HttpTrigger-PWAfunction-showall?code=4B2Q2uPjkUs/Yd4soRs1aUWSbfNjN3z/VaSsKws2oYK9XSxfgadQ6w==' : \"https://js-function-jery.azurewebsites.net/api/HttpTrigger-PWAfunction-showall?code=4B2Q2uPjkUs/Yd4soRs1aUWSbfNjN3z/VaSsKws2oYK9XSxfgadQ6w==\"\n\n    const [users, setUsers] = React.useState([]);\n    // modify button modal\n    const [show, setShow] = React.useState({\n        show: false,\n        activeModal: null\n    });\n    const handleShow = (e, index) => setShow({\n        show: true,\n        activeModal: index,\n    });\n    const handleClose = () => setShow({\n        show: false,\n        activeModal: null,\n    });\n\n    const [show0, setShow0] = React.useState({\n        show0: false,\n        activeModal0: null\n    });\n    const handleShow0 = (e, index) => setShow0({\n        show: true,\n        activeModal0: index,\n    });\n    const handleClose0 = () => setShow0({\n        show: false,\n        activeModal0: null,\n    });\n\n    // use react hook to fetch all the user data from Express API\n    React.useEffect(() => {\n        fetch(url)\n            .then(results => results.json())\n            .then(users => {\n                setUsers(users.res);\n                // console.log(users);\n            });\n    }, [url]);\n    // handle delete record.\n    const [showdelete, SetShowdelete] = React.useState({\n        showdelete: false,\n        activedelete: null\n    });\n    const handleShowdelete = (e, index) => SetShowdelete({\n        showdelete: true,\n        activedelete: index\n    });\n    const handleClosedelete = () => SetShowdelete({\n        showdelete: false,\n        activedelete: null\n    });\n    // send request to express delete api and delete the data due to Mongo index ID. findByIdAndRemove()\n    function deleteRecord(e, id) {\n        console.log(id);\n        console.log(url + '/delete/' + id);\n        axios({ \t\t\t\t// send POST request to the delete api\n            method: 'post',\n            url: url + '/delete/' + id,\n            query: {\n                Id: id,\n            }\n        })\n            .then(res => {\n                console.log(res);\n                if (res.status === 200) {\n                    console.log(\"delete success\"); // login success\n                    window.location.reload();\n                } else {\n                    console.log(\"delete failed\");\n                    window.location.reload();\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                window.location.reload();\n            })\n    }\n\n    // set from info\n    const [modifyuser, setModifyuser] = React.useState({\n        _id: '',\n        email: '',\n        password: '',\n        first_name: '',\n        country_name: '',\n        city_name: '',\n        state_name: '',\n    })\n\n    // create form submit\n    const modifyRecord = (e, userid) => {\n        e.preventDefault();\n        console.log(modifyuser);\n\n        var user = document.getElementById(userid).elements;\n        console.log(user._id.value);\n        console.log(user.email.value);\n        console.log(user.email.placeholder);\n        console.log(user.password.value);\n        console.log(user.first_name.value);\n        console.log(user.country_name.value);\n        console.log(user.city_name.value);\n        console.log(user.state_name.value);\n        console.log(url + '/edit/' + user._id.value);\n\n        // axios call to express create user\n        axios({\n            method: 'post',\n            url: url + '/edit/' + user._id.value,\n            data: {\n                _id: user._id.value,\n                email: (modifyuser.email === \"\") ? user.email.placeholder : modifyuser.email,\n                password: (modifyuser.password === \"\") ? user.password.placeholder : modifyuser.password,\n                first_name: (modifyuser.first_name === \"\") ? user.first_name.placeholder : modifyuser.first_name,\n                country_name: (modifyuser.country_name === \"\") ? user.country_name.placeholder : modifyuser.country_name,\n                city_name: (modifyuser.city_name === \"\") ? user.city_name.placeholder : modifyuser.city_name,\n                state_name: (modifyuser.state_name === \"\") ? user.state_name.placeholder : modifyuser.state_name,\n            }\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"modify success\");\n                    window.location.reload();\n                } else {\n                    console.log(\"modify failed\");\n                    // history.push('/#/error');\n                    window.location.reload();\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                window.location.reload();\n            })\n    };\n    // match form name properity with the input value\n    const updateValue = (e) => {\n        console.log(e.target.value);\n        setModifyuser({\n            ...modifyuser,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const renderTable = () => {\n        return users.map((user) => {\n            // console.log(user);\n            return (\n                <tr key={user._id}>\n                    <td>\n                        <p className=\"text-primary\" onClick={e => handleShow0(e, user._id)}>{user.first_name}</p>\n                        <Modal show={show0.activeModal0 === user._id} onHide={handleClose0} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\n                            <Modal.Header closeButton>\n                                <Modal.Title>Details</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <Form id={user._id}>\n                                    <Form.Group as={Row} controlId=\"formPlaintextId\">\n                                        <Form.Label column sm=\"2\">ID</Form.Label>\n                                        <Col sm=\"10\">\n                                            <Form.Control readOnly type='text' placeholder={user._id} value={user._id} name=\"_id\" />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                        <Form.Label column sm=\"2\">Email</Form.Label>\n                                        <Col sm=\"10\">\n                                            <Form.Control readOnly type='text' placeholder={user.email} value={user.email} name=\"email\" />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                        <Form.Label column sm=\"2\">Password</Form.Label>\n                                        <Col sm=\"10\">\n                                            <Form.Control readOnly type='password' placeholder={user.password} value={user.password} name=\"password\" />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"formPlaintextFirstName\">\n                                        <Form.Label column sm=\"2\">First Name</Form.Label>\n                                        <Col sm=\"10\">\n                                            <Form.Control readOnly type='text' placeholder={user.first_name} value={user.first_name} name=\"first_name\" />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"formPlaintextCountry\">\n                                        <Form.Label column sm=\"2\">Country Name</Form.Label>\n                                        <Col sm=\"10\">\n                                            <Form.Control readOnly type='text' placeholder={user.country_name} value={user.country_name} name=\"country_name\" />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"formPlaintextCity\">\n                                        <Form.Label column sm=\"2\">City Name</Form.Label>\n                                        <Col sm=\"10\">\n                                            <Form.Control readOnly type='text' placeholder={user.city_name} value={user.city_name} name=\"city_name\" />\n                                        </Col>\n                                    </Form.Group>\n                                    <Form.Group as={Row} controlId=\"formPlaintextState\">\n                                        <Form.Label column sm=\"2\">State Name</Form.Label>\n                                        <Col sm=\"10\">\n                                            <Form.Control readOnly type='text' placeholder={user.state_name} value={user.state_name} name=\"state_name\" />\n                                        </Col>\n                                    </Form.Group>\n                                </Form>\n                            </Modal.Body>\n                        </Modal>\n                    </td>\n                    <td>{user.email}</td>\n                    <td>{user.password}</td>\n                    <td>{user.country_name}</td>\n                    <td>{user.city_name}</td>\n                    <td>{user.state_name}</td>\n                    <td>{user.company_address}</td>\n                    <td>\n                        <ButtonGroup aria-label=\"Basic example\">\n                            <Button size=\"sm\" variant=\"primary\" onClick={e => handleShow(e, user._id)}>Modify</Button>\n                            <Modal show={show.activeModal === user._id} onHide={handleClose} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\n                                <Modal.Header closeButton>\n                                    <Modal.Title>Modify</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <Form id={user._id} onSubmit={e => modifyRecord(e, user._id)}>\n                                        <Form.Group as={Row} controlId=\"formPlaintextId\">\n                                            <Form.Label column sm=\"2\">ID</Form.Label>\n                                            <Col sm=\"10\">\n                                                <Form.Control readOnly type='text' placeholder={user._id} value={user._id} name=\"_id\" />\n                                            </Col>\n                                        </Form.Group>\n                                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                            <Form.Label column sm=\"2\">Email</Form.Label>\n                                            <Col sm=\"10\">\n                                                <Form.Control type='text' placeholder={user.email} value={modifyuser.email} name=\"email\" onChange={e => updateValue(e)} />\n                                            </Col>\n                                        </Form.Group>\n                                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                            <Form.Label column sm=\"2\">Password</Form.Label>\n                                            <Col sm=\"10\">\n                                                <Form.Control type='password' placeholder={user.password} value={modifyuser.password} name=\"password\" onChange={e => updateValue(e)} />\n                                            </Col>\n                                        </Form.Group>\n                                        <Form.Group as={Row} controlId=\"formPlaintextFirstName\">\n                                            <Form.Label column sm=\"2\">First Name</Form.Label>\n                                            <Col sm=\"10\">\n                                                <Form.Control type='text' placeholder={user.first_name} value={modifyuser.first_name} name=\"first_name\" onChange={e => updateValue(e)} />\n                                            </Col>\n                                        </Form.Group>\n                                        <Form.Group as={Row} controlId=\"formPlaintextCountry\">\n                                            <Form.Label column sm=\"2\">Country Name</Form.Label>\n                                            <Col sm=\"10\">\n                                                <Form.Control type='text' placeholder={user.country_name} value={modifyuser.country_name} name=\"country_name\" onChange={e => updateValue(e)} />\n                                            </Col>\n                                        </Form.Group>\n                                        <Form.Group as={Row} controlId=\"formPlaintextCity\">\n                                            <Form.Label column sm=\"2\">City Name</Form.Label>\n                                            <Col sm=\"10\">\n                                                <Form.Control type='text' placeholder={user.city_name} value={modifyuser.city_name} name=\"city_name\" onChange={e => updateValue(e)} />\n                                            </Col>\n                                        </Form.Group>\n                                        <Form.Group as={Row} controlId=\"formPlaintextState\">\n                                            <Form.Label column sm=\"2\">State Name</Form.Label>\n                                            <Col sm=\"10\">\n                                                <Form.Control type='text' placeholder={user.state_name} value={modifyuser.state_name} name=\"state_name\" onChange={e => updateValue(e)} />\n                                            </Col>\n                                        </Form.Group>\n                                    </Form>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button form={user._id} type='submit' variant=\"primary\" >Submit</Button>\n                                </Modal.Footer>\n                            </Modal>\n                        </ButtonGroup>\n                        <ButtonGroup>\n                            <Button size=\"sm\" variant=\"danger\" onClick={e => handleShowdelete(e, user._id)}>Delete</Button>\n                            <Modal show={showdelete.activedelete === user._id} onHide={handleClosedelete} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\n                                <Modal.Header variant=\"danger\" closeButton bg=\"danger\">\n                                    <Modal.Title>Delete</Modal.Title>\n                                </Modal.Header>\n                                <Modal.Body>\n                                    <p>user email is: {user.email}</p>\n                                </Modal.Body>\n                                <Modal.Footer>\n                                    <Button type='button' variant=\"danger\" onClick={e => deleteRecord(e, user._id)}>Delete</Button>\n                                </Modal.Footer>\n                            </Modal>\n                        </ButtonGroup>\n                    </td>\n                </tr>\n            )\n        })\n    }\n\n\n    // create record\n    const [showcreate, setShowcreate] = React.useState(false);\n\n    const handleShowcreate = () => {\n        setShowcreate(true);\n    }\n    const handleClosecreate = () => {\n        setShowcreate(false);\n    }\n    // set from info\n    const [newuser, setNewuser] = React.useState({\n        _id: '',\n        email: '',\n        password: '',\n        first_name: '',\n        country_name: '',\n        city_name: '',\n        state_name: '',\n    })\n    // create form submit\n    const createRecord = e => {\n        e.preventDefault();\n        console.log(newuser);\n        // axios call to express create user\n        axios({\n            method: 'POST',\n            url: url + '/register',\n            data: {\n                email: newuser.email,\n                password: newuser.password,\n                first_name: newuser.first_name,\n                country_name: newuser.country_name,\n                city_name: newuser.city_name,\n                state_name: newuser.state_name,\n            }\n        })\n            .then(res => {\n                if (res.status === 200) {\n                    console.log(\"create success\");\n                    window.location.reload();\n                } else {\n                    console.log(\"create failed\");\n                    window.location.reload();\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    };\n    // match form name properity with the input value\n    const updateField = e => {\n        setNewuser({\n            ...newuser,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const createData = () => {\n        return (\n            <div>\n                <ButtonGroup aria-label=\"Basic example\">\n                    <Button size=\"lg\" variant=\"success\" onClick={handleShowcreate}>Create</Button>\n                    <Modal show={showcreate} onHide={handleClosecreate} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Create</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            <Form id='createuser' onSubmit={createRecord}>\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                    <Form.Label column sm=\"2\">Email</Form.Label>\n                                    <Col sm=\"10\">\n                                        <Form.Control type='text' placeholder=\"sample@sample.com\" value={newuser.email} name=\"email\" onChange={updateField} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                    <Form.Label column sm=\"2\">Password</Form.Label>\n                                    <Col sm=\"10\">\n                                        <Form.Control type='password' placeholder=\"\" value={newuser.password} name=\"password\" onChange={updateField} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                    <Form.Label column sm=\"2\">First Name</Form.Label>\n                                    <Col sm=\"10\">\n                                        <Form.Control type='text' placeholder=\"\" value={newuser.first_name} name=\"first_name\" onChange={updateField} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                    <Form.Label column sm=\"2\">Country Name</Form.Label>\n                                    <Col sm=\"10\">\n                                        <Form.Control type='text' placeholder=\"\" value={newuser.country_name} name=\"country_name\" onChange={updateField} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                    <Form.Label column sm=\"2\">City Name</Form.Label>\n                                    <Col sm=\"10\">\n                                        <Form.Control type='text' placeholder=\"\" value={newuser.city_name} name=\"city_name\" onChange={updateField} />\n                                    </Col>\n                                </Form.Group>\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\n                                    <Form.Label column sm=\"2\">State Name</Form.Label>\n                                    <Col sm=\"10\">\n                                        <Form.Control type='text' placeholder=\"\" value={newuser.state_name} name=\"state_name\" onChange={updateField} />\n                                    </Col>\n                                </Form.Group>\n                            </Form>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button form='createuser' type='submit' variant=\"success\" >Submit</Button>\n                        </Modal.Footer>\n                    </Modal>\n                </ButtonGroup>\n            </div>\n        )\n    }\n\n    const columns = [{\n        dataField: '_id',\n        text: 'ID',\n        sort: true\n    }, {\n        dataField: 'first_name',\n        text: 'First_name',\n        sort: true\n    }, {\n        dataField: 'email',\n        text: 'Email',\n        sort: true\n    }, {\n        dataField: 'password',\n        text: 'Password',\n        sort: true\n    }, {\n        dataField: 'country_name',\n        text: 'Country_name',\n        sort: true\n    }, {\n        dataField: 'city_name',\n        text: 'city_name',\n        sort: true\n    }, {\n        dataField: 'state_name',\n        text: 'state_name',\n        sort: true\n    }, {\n        dataField: 'company_address',\n        text: 'company_address',\n        sort: true\n    }, {\n        dataField: 'Operations',\n        text: 'Operations',\n        sort: true\n    }];\n\n    const defaultSorted = [\n        {\n            dataField: \"name\",\n            order: \"desc\"\n        }\n    ];\n\n    const { SearchBar } = Search;\n\n    return (\n        <div>\n            {createData()}\n            <BootstrapTable\n                bootstrap4\n                stripped\n                keyField=\"id\"\n                data={users}\n                columns={columns}\n                defaultSorted={defaultSorted}\n                cellEdit={cellEditFactory({\n                    mode: \"click\",\n                    blurToSave: true\n                })}\n            />\n        </div>\n    );\n}\n\n\n// https://medium.com/@BogdanSoare/how-to-use-reacts-new-context-api-to-easily-manage-modals-2ae45c7def81","import React, { Component } from 'react';\nimport UsetsTable2 from './UsersTable2';\nimport Error from './Error';\nimport { Container } from 'react-bootstrap';\n\nfunction CheckLogin() {\n    // check if use email is stored in browser, if so then user has logged in and redirect to home page\n    if(localStorage.getItem('loginemail')){ \n        return <UsetsTable2 />\n    } else {\n        return <Error />       // user not logged in, redirect to error page\n    }\n}\n\nclass Users extends Component{\n    render(){\n        return(\n            <Container fluid>\n                <CheckLogin />\n            </Container>\n        );\n    }\n}\n\nexport default Users;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport './App.css';\n\nimport NavbarTop from './Navs/NavbarTop';\nimport Home from './Pages/Home';\nimport Users from './Pages/Users';\nimport Error from './Pages/Error';\nimport Users2 from './Pages/Users2';\n\nfunction App() {\n  return (\n    <div>\n      <NavbarTop />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/users\" component={Users} />\n        <Route path=\"/users2\" component={Users2} />\n        <Route path=\"/error\" component={Error} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// Material-UI\n// https://material-ui.com/getting-started/installation/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport history from './Pages/History';\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\"\n\n// import { BrowserRouter } from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter history={history}>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}